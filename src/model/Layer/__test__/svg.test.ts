import Svg from '../../Layer/Svg';
import Style from '../../Style/Style';

import { defaultExportOptions } from '../../utils';

// 可复用的 shapeGroup 信息
const shapeGroupData = {
  _class: 'shapeGroup',
  do_objectID: 'uuid',
  booleanOperation: -1,
  isFixedToViewport: false,
  isFlippedHorizontal: false,
  isFlippedVertical: false,
  isLocked: false,
  isVisible: true,
  layerListExpandedType: 0,
  name: 'svg',
  nameIsFixed: false,
  resizingConstraint: 63,
  resizingType: 0,
  shouldBreakMaskChain: false,
  exportOptions: defaultExportOptions,
  rotation: 0,
  frame: {
    _class: 'rect',
    constrainProportions: false,
    height: 814.2161138351329,
    width: 736.652344,
    x: -90,
    y: 4,
  },
  clippingMaskMode: 0,
  style: new Style().toSketchJSON(),
  hasClickThrough: false,
  windingRule: 1,
};

// 可复用的 shapePath 信息
const shapePathData = {
  _class: 'shapePath',
  do_objectID: 'uuid',
  booleanOperation: -1,
  isFixedToViewport: false,
  isFlippedHorizontal: false,
  isFlippedVertical: false,
  isLocked: false,
  isVisible: true,
  layerListExpandedType: 0,
  name: '路径',
  nameIsFixed: false,
  resizingConstraint: 63,
  resizingType: 0,
  rotation: 0,
  shouldBreakMaskChain: false,
  exportOptions: {
    _class: 'exportOptions',
    includedLayerIds: [],
    layerOptions: 0,
    shouldTrim: false,
    exportFormats: [],
  },
  clippingMaskMode: 0,
  style: new Style().toSketchJSON(),
  edited: true,
  pointRadiusBehaviour: 1,
};

/**
 * 复合对象 图形如下
 * @see https://svg-path-visualizer.netlify.app/#M73.2226562%2C282.36788%20C517.988281%2C268.985067%20740.371094%2C312.330119%20740.371094%2C412.403036%20C740.371094%2C562.512411%20706.574547%2C689.414193%20665.761719%2C731.926473%20C585.929687%2C815.082723%20381.128906%2C824.973348%20240.128906%2C815.082723%20C193.160156%2C721.491578%20114.450521%2C640.427775%204%2C571.891317%20L73.2226562%2C282.36788%20Z%20M288.371094%2C399.757812%20L569.023438%2C399.757812%20L569.023438%2C629.085937%20L288.371094%2C629.085937%20L288.371094%2C399.757812%20Z%20M460%2C4%20L640.652344%2C4%20C695.880819%2C4%20740.652344%2C48.771525%20740.652344%2C104%20L740.652344%2C233.328125%20L740.652344%2C233.328125%20L460%2C233.328125%20L460%2C4%20Z%20M68%2C4%20L248.652344%2C4%20C303.880819%2C4%20348.652344%2C48.771525%20348.652344%2C104%20L348.652344%2C233.328125%20L348.652344%2C233.328125%20L68%2C233.328125
 */
const path =
  'M73.2226562,282.36788 C517.988281,268.985067 740.371094,312.330119 740.371094,412.403036 C740.371094,562.512411 706.574547,689.414193 665.761719,731.926473 C585.929687,815.082723 381.128906,824.973348 240.128906,815.082723 C193.160156,721.491578 114.450521,640.427775 4,571.891317 L73.2226562,282.36788 Z M288.371094,399.757812 L569.023438,399.757812 L569.023438,629.085937 L288.371094,629.085937 L288.371094,399.757812 Z M460,4 L640.652344,4 C695.880819,4 740.652344,48.771525 740.652344,104 L740.652344,233.328125 L740.652344,233.328125 L460,233.328125 L460,4 Z M68,4 L248.652344,4 C303.880819,4 348.652344,48.771525 348.652344,104 L348.652344,233.328125 L348.652344,233.328125 L68,233.328125';

describe('Svg 类', () => {
  it('StepBackwardOutlined 正常渲染', () => {
    const svg = new Svg({
      x: 0,
      y: 0,
      width: 100,
      height: 100,
      path:
        'm347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2 -16.95v-602.05c0 -18.05 -20.95 -28.14 -35.2 -16.94l-383.19999999999993 301.02a21.53 21.53 0 0 0 0 33.9m-17.600000000000023 335.04999999999995h-64a8 8 0 0 1 -8 -8v-688a8 8 0 0 1 8 -8h64a8 8 0 0 1 8 8v688a8 8 0 0 1 -8 8',
    });

    expect(svg.toSketchJSON()).toStrictEqual({
      _class: 'shapeGroup',
      do_objectID: 'uuid',
      booleanOperation: -1,
      isFixedToViewport: false,
      isFlippedHorizontal: false,
      isFlippedVertical: false,
      isLocked: false,
      isVisible: true,
      layerListExpandedType: 2,
      name: '形状',
      nameIsFixed: false,
      resizingConstraint: 63,
      resizingType: 0,
      rotation: 0,
      shouldBreakMaskChain: false,
      exportOptions: {
        _class: 'exportOptions',
        includedLayerIds: [],
        layerOptions: 0,
        shouldTrim: false,
        exportFormats: [],
      },
      frame: {
        _class: 'rect',
        constrainProportions: false,
        height: 100,
        width: 100,
        x: 0,
        y: 0,
      },
      clippingMaskMode: 0,
      hasClippingMask: false,
      style: new Style().toSketchJSON(),
      hasClickThrough: false,
      groupLayout: { _class: 'MSImmutableFreeformGroupLayout' },
      layers: [
        {
          _class: 'shapePath',
          do_objectID: '04718C91-1545-4792-AC34-900884E9690D',
          booleanOperation: -1,
          isFixedToViewport: false,
          isFlippedHorizontal: false,
          isFlippedVertical: false,
          isLocked: false,
          isVisible: true,
          layerListExpandedType: 0,
          name: '路径',
          nameIsFixed: false,
          resizingConstraint: 63,
          resizingType: 0,
          rotation: 0,
          shouldBreakMaskChain: false,
          exportOptions: {
            _class: 'exportOptions',
            includedLayerIds: [],
            layerOptions: 0,
            shouldTrim: false,
            exportFormats: [],
          },
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 16,
            width: 16,
            x: -3.395738428446185,
            y: -2.500015819373429,
          },
          clippingMaskMode: 0,
          hasClippingMask: false,
          style: {
            _class: 'style',
            do_objectID: 'C440646F-18AD-4A75-8323-05855D2D8FB6',
            endMarkerType: 0,
            miterLimit: 10,
            startMarkerType: 0,
            windingRule: 1,
            blur: {
              _class: 'blur',
              isEnabled: false,
              center: '{0.5, 0.5}',
              motionAngle: 0,
              radius: 0.15625,
              saturation: 1,
              type: 0,
            },
            borderOptions: {
              _class: 'borderOptions',
              isEnabled: true,
              dashPattern: [],
              lineCapStyle: 0,
              lineJoinStyle: 0,
            },
            borders: [],
            colorControls: {
              _class: 'colorControls',
              isEnabled: false,
              brightness: 0,
              contrast: 1,
              hue: 0,
              saturation: 1,
            },
            contextSettings: {
              _class: 'graphicsContextSettings',
              blendMode: 0,
              opacity: 1,
            },
            fills: [],
            innerShadows: [],
            shadows: [],
          },
          edited: true,
          isClosed: true,
          pointRadiusBehaviour: 1,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.68786841740288662, 0.82145606683583949}',
              curveMode: 4,
              curveTo: '{0.67395240177788662, 0.81051856683583945}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.67395240177788662, 0.81051856683583945}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.70832740177788667, 0.7939658324608394}',
              curveMode: 4,
              curveTo: '{0.70832740177788667, 0.81159278558583947}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.70832740177788667, 0.7939658324608394}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.70832740177788667, 0.18839942621083924}',
              curveMode: 4,
              curveTo: '{0.70832740177788667, 0.20602637933583925}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.70832740177788667, 0.20602637933583925}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.67395240177788662, 0.18948341058583926}',
              curveMode: 4,
              curveTo: '{0.68786841740288662, 0.17854591058583927}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.67395240177788662, 0.18948341058583926}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.29464527163362453, 0.48743354606058331}',
              curveMode: 4,
              curveTo: '{0.29973365177788658, 0.48344825433583927}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.29973365177788658, 0.48344825433583927}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.29167259822211344, 0.506464282192017}',
              curveMode: 2,
              curveTo: '{0.29167259822211344, 0.49353769522966173}',
              hasCurveFrom: true,
              hasCurveTo: true,
              point: '{0.29167259822211344, 0.5000009887108392}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.29973365177788658, 0.51655372308583947}',
              curveMode: 4,
              curveTo: '{0.29464527163362453, 0.51256843136109542}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.29973365177788658, 0.51655372308583947}',
            },
          ],
        },
        {
          _class: 'shapePath',
          do_objectID: '806AC6DA-FE9E-45AD-AD09-50E4E32583CB',
          booleanOperation: -1,
          isFixedToViewport: false,
          isFlippedHorizontal: false,
          isFlippedVertical: false,
          isLocked: false,
          isVisible: true,
          layerListExpandedType: 0,
          name: '路径',
          nameIsFixed: false,
          resizingConstraint: 63,
          resizingType: 0,
          rotation: 0,
          shouldBreakMaskChain: false,
          exportOptions: {
            _class: 'exportOptions',
            includedLayerIds: [],
            layerOptions: 0,
            shouldTrim: false,
            exportFormats: [],
          },
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 16,
            width: 16,
            x: -7.2,
            y: -2.5,
          },
          clippingMaskMode: 0,
          hasClippingMask: false,
          style: {
            _class: 'style',
            do_objectID: '567FFCDF-D005-4F8C-B925-B0E0CA149CD3',
            endMarkerType: 0,
            miterLimit: 10,
            startMarkerType: 0,
            windingRule: 1,
            blur: {
              _class: 'blur',
              isEnabled: false,
              center: '{0.5, 0.5}',
              motionAngle: 0,
              radius: 0.15625,
              saturation: 1,
              type: 0,
            },
            borderOptions: {
              _class: 'borderOptions',
              isEnabled: true,
              dashPattern: [],
              lineCapStyle: 0,
              lineJoinStyle: 0,
            },
            borders: [],
            colorControls: {
              _class: 'colorControls',
              isEnabled: false,
              brightness: 0,
              contrast: 1,
              hue: 0,
              saturation: 1,
            },
            contextSettings: {
              _class: 'graphicsContextSettings',
              blendMode: 0,
              opacity: 1,
            },
            fills: [],
            innerShadows: [],
            shadows: [],
          },
          edited: true,
          isClosed: true,
          pointRadiusBehaviour: 1,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.45447715250169196, 0.84374999999999989}',
              curveMode: 4,
              curveTo: '{0.45999999999999996, 0.84374999999999989}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.45999999999999996, 0.84374999999999989}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.44999999999999996, 0.83593749999999989}',
              curveMode: 4,
              curveTo: '{0.44999999999999996, 0.84025222460805293}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.44999999999999996, 0.83593749999999989}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.44999999999999996, 0.15974777539194693}',
              curveMode: 4,
              curveTo: '{0.44999999999999996, 0.1640625}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.44999999999999996, 0.1640625}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.45999999999999996, 0.15625}',
              curveMode: 4,
              curveTo: '{0.45447715250169196, 0.15625}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.45999999999999996, 0.15625}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.54552284749830793, 0.15625}',
              curveMode: 4,
              curveTo: '{0.53999999999999992, 0.15625}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.53999999999999992, 0.15625}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.54999999999999993, 0.1640625}',
              curveMode: 4,
              curveTo: '{0.54999999999999993, 0.15974777539194693}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.54999999999999993, 0.1640625}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.54999999999999993, 0.84025222460805293}',
              curveMode: 4,
              curveTo: '{0.54999999999999993, 0.83593749999999989}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.54999999999999993, 0.83593749999999989}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.53999999999999992, 0.84374999999999989}',
              curveMode: 4,
              curveTo: '{0.54552284749830793, 0.84374999999999989}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0.53999999999999992, 0.84374999999999989}',
            },
          ],
        },
      ],
      windingRule: 0,
    });
  });

  it('复合对象 可正常渲染', function () {
    const svg = new Svg({
      path,
      height: 814.2161138351329,
      width: 736.652344,
      x: -90,
      y: 4,
    });

    expect(svg.toSketchJSON()).toStrictEqual({
      ...shapeGroupData,
      layers: [
        // 不规则
        {
          ...shapePathData,
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 538.2161135860229,
            width: 736.371094,
            x: 0,
            y: 276.0000002491099,
          },
          isClosed: true,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.69800170754665725, -0.020465632616830577}',
              curveMode: 4,
              curveTo: '{0.09400512426958466, 0.004399496208155765}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.09400512426958466, 0.004399496208155765}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 0.52490515170303653}',
              curveMode: 3,
              curveTo: '{1, 0.060069027914235316}',
              hasCurveFrom: true,
              hasCurveTo: true,
              point: '{1, 0.24600347780135365}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.79026688003046464, 0.99417819207556657}',
              curveMode: 3,
              curveTo: '{0.954103919510996, 0.7606873566513045}',
              hasCurveFrom: true,
              hasCurveTo: true,
              point: '{0.8986796526806632, 0.8396747353768307}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.25688156086148595, 0.82028680785739161}',
              curveMode: 4,
              curveTo: '{0.5121451793435009, 1.0125548715363522}',
              hasCurveFrom: true,
              hasCurveTo: true,
              point: '{0.32066563710063284, 0.9941781920755667}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 0.54233106252817}',
              curveMode: 4,
              curveTo: '{0.14999301561394532, 0.6696710961502698}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{0, 0.54233106252817}',
            },
          ],
        },
        // 正方形
        {
          ...shapePathData,
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 229.32812499999994,
            width: 280.652344,
            x: 284.37109375,
            y: 395.7578124999999,
          },
          isClosed: true,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 0}',
              curveMode: 1,
              curveTo: '{0, 0}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 0}',
              curveMode: 1,
              curveTo: '{1, 0}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 1}',
              curveMode: 1,
              curveTo: '{1, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 1}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 1}',
              curveMode: 1,
              curveTo: '{0, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 1}',
            },
          ],
        },
        // 圆角矩形
        {
          ...shapePathData,
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 229.328125,
            width: 280.65234399999997,
            x: 456,
            y: 0,
          },
          isClosed: true,
          pointRadiusBehaviour: 1,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 0}',
              curveMode: 1,
              curveTo: '{0, 0}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.8404733615907374, 0}',
              curveMode: 4,
              curveTo: '{0.6436872802316591, 0}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.6436872802316591, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 0.4360564147986646}',
              curveMode: 4,
              curveTo: '{1, 0.1952291067656878}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{1, 0.4360564147986646}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 1}',
              curveMode: 1,
              curveTo: '{1, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 1}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 1}',
              curveMode: 1,
              curveTo: '{1, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 1}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 1}',
              curveMode: 1,
              curveTo: '{0, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 1}',
            },
          ],
        },
        // 开放矩形
        {
          ...shapePathData,
          frame: {
            _class: 'rect',
            constrainProportions: false,
            height: 229.328125,
            width: 280.652344,
            x: 64,
            y: 0,
          },
          isClosed: false,
          pointRadiusBehaviour: 1,
          points: [
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 0}',
              curveMode: 1,
              curveTo: '{0, 0}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0.8404733615907372, 0}',
              curveMode: 4,
              curveTo: '{0.6436872802316591, 0}',
              hasCurveFrom: true,
              hasCurveTo: false,
              point: '{0.6436872802316591, 0}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 0.4360564147986646}',
              curveMode: 4,
              curveTo: '{1, 0.1952291067656878}',
              hasCurveFrom: false,
              hasCurveTo: true,
              point: '{1, 0.4360564147986646}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 1}',
              curveMode: 1,
              curveTo: '{1, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 1}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{1, 1}',
              curveMode: 1,
              curveTo: '{1, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{1, 1}',
            },
            {
              _class: 'curvePoint',
              cornerRadius: 0,
              curveFrom: '{0, 1}',
              curveMode: 1,
              curveTo: '{0, 1}',
              hasCurveFrom: false,
              hasCurveTo: false,
              point: '{0, 1}',
            },
          ],
        },
      ],
    });
  });

  describe('convertToCubicBezier', function () {
    it('复合对象转换正常', function () {
      const points = Svg.svgPathToShapeGroup(path);

      expect(points).toStrictEqual({
        frame: { width: 736.652344, height: 814.2161138351329 },
        shapes: [
          // 不规则
          {
            frame: {
              height: 538.2161135860229,
              width: 736.371094,
              x: 4,
              y: 818.2161138351329,
            },
            isClose: true,
            points: [
              {
                type: 2,
                x: 0.09400512426958466,
                y: 0.004399496208155765,
              },
              {
                type: 32,
                x: 1,
                x1: 0.6980017075466572,
                x2: 1,
                y: 0.24600347780135365,
                y1: -0.020465632616830685,
                y2: 0.060069027914235316,
              },
              {
                type: 32,
                x: 0.8986796526806632,
                x1: 1,
                x2: 0.954103919510996,
                y: 0.8396747353768307,
                y1: 0.5249051517030365,
                y2: 0.7606873566513045,
              },
              {
                type: 32,
                x: 0.32066563710063284,
                x1: 0.7902668800304646,
                x2: 0.5121451793435009,
                y: 0.9941781920755667,
                y1: 0.9941781920755667,
                y2: 1.0125548715363522,
              },
              {
                type: 32,
                x: 0,
                x1: 0.25688156086148595,
                x2: 0.14999301561394532,
                y: 0.54233106252817,
                y1: 0.8202868078573917,
                y2: 0.6696710961502698,
              },
              {
                type: 16,
                x: 0.09400512426958466,
                y: 0.004399496208155765,
              },
            ],
          },
          // 正方形
          {
            frame: {
              height: 229.32812499999994,
              width: 280.652344,
              x: 288.371094,
              y: 629.085937,
            },
            isClose: true,
            points: [
              {
                type: 2,
                x: 0,
                y: 0,
              },
              {
                type: 16,
                x: 1,
                y: 0,
              },
              {
                type: 16,
                x: 1,
                y: 1,
              },
              {
                type: 16,
                x: 0,
                y: 1,
              },
              {
                type: 16,
                x: 0,
                y: 0,
              },
            ],
          },
          // 圆角矩形

          {
            frame: {
              height: 229.328125,
              width: 280.65234399999997,
              x: 460,
              y: 233.328125,
            },
            isClose: true,
            points: [
              {
                type: 2,
                x: 0,
                y: 0,
              },
              {
                type: 16,
                x: 0.6436872802316591,
                y: 0,
              },
              {
                type: 32,
                x: 1,
                x1: 0.8404733615907374,
                x2: 1,
                y: 0.4360564147986646,
                y1: 0,
                y2: 0.1952291067656878,
              },
              {
                type: 16,
                x: 1,
                y: 1,
              },
              {
                type: 16,
                x: 1,
                y: 1,
              },
              {
                type: 16,
                x: 0,
                y: 1,
              },
              {
                type: 16,
                x: 0,
                y: 0,
              },
            ],
          },
          // 开放矩形
          {
            frame: {
              height: 229.328125,
              width: 280.652344,
              x: 68,
              y: 233.328125,
            },
            isClose: false,
            points: [
              {
                type: 2,
                x: 0,
                y: 0,
              },
              {
                type: 16,
                x: 0.6436872802316591,
                y: 0,
              },
              {
                type: 32,
                x: 1,
                x1: 0.8404733615907372,
                x2: 1,
                y: 0.4360564147986646,
                y1: 0,
                y2: 0.1952291067656878,
              },
              {
                type: 16,
                x: 1,
                y: 1,
              },
              {
                type: 16,
                x: 1,
                y: 1,
              },
              {
                type: 16,
                x: 0,
                y: 1,
              },
            ],
          },
        ],
      });
    });

    it('path不正确时报错', function () {
      const path = 'Z';
      const t = () => {
        try {
          Svg.svgPathToShapeGroup(path);
        } catch (e) {
          throw e;
        }
      };
      expect(t).toThrow(
        'Error Path!\nData:Z\nPlease check whether the path is correct.'
      );
    });
  });
});
